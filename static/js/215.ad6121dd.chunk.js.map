{"version":3,"file":"static/js/215.ad6121dd.chunk.js","mappings":"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","sources":["common/ui/Search/Search.jsx","common/ui/LeagueCard/LeagueCard.jsx","common/components/LeaguesList.jsx","common/containers/LeaguesListContainer.jsx","pages/Leagues/Leagues.jsx","utils/pagination.js","../node_modules/@mui/icons-material/Search.js"],"sourcesContent":["import {InputBase, styled, alpha} from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nconst StyledSearch = styled(\"div\")(({theme}) => ({\n  position: \"relative\",\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.primary.main, 0.15),\n  \"&:hover\": {\n    backgroundColor: alpha(theme.palette.primary.main, 0.25),\n  },\n  width: \"100%\",\n  [theme.breakpoints.up(\"sm\")]: {\n    width: \"300px\",\n  },\n}));\n\nconst StyledInputBase = styled(InputBase)(({theme}) => ({\n  color: \"inherit\",\n  width: \"100%\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n  },\n}));\n\nconst SearchIconWrapper = styled(\"div\")(({theme}) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  color: theme.palette.primary.main,\n}));\n\nconst Search = (props) => (\n  <StyledSearch>\n    <SearchIconWrapper>\n      <SearchIcon />\n    </SearchIconWrapper>\n    <StyledInputBase {...props} inputProps={{\"aria-label\": \"search\"}} />\n  </StyledSearch>\n);\n\nexport default Search;\n","import PropTypes from \"prop-types\";\nimport {Paper, Skeleton, styled, Typography} from \"@mui/material\";\nimport {Link} from \"react-router-dom\";\n\nconst LeagueCardStyled = styled(Paper)(() => ({\n  height: \"150px\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  padding: \"20px\",\n  textDecoration: \"none\",\n}));\n\nconst LeagueCard = ({name = \"\", areaName = \"\", href = \"\", isFetching = false}) => {\n  return (\n    <LeagueCardStyled elevation={3} component={Link} to={href}>\n      {isFetching ? (\n        <Skeleton width=\"80%\">\n          <Typography variant=\"h5\" component=\"div\" gutterBottom>\n            .\n          </Typography>\n        </Skeleton>\n      ) : (\n        <Typography variant=\"h5\" component=\"div\" gutterBottom>\n          {name}\n        </Typography>\n      )}\n      {isFetching ? (\n        <Skeleton width=\"60%\">\n          <Typography variant=\"subtitle\" component=\"div\" sx={{color: \"#adabab\"}}>\n            .\n          </Typography>\n        </Skeleton>\n      ) : (\n        <Typography variant=\"subtitle\" component=\"div\" sx={{color: \"#adabab\"}}>\n          {areaName}\n        </Typography>\n      )}\n    </LeagueCardStyled>\n  );\n};\n\nLeagueCard.propTypes = {\n  name: PropTypes.string,\n  areaName: PropTypes.string,\n  href: PropTypes.string,\n  isFetching: PropTypes.bool,\n};\n\nexport default LeagueCard;\n","import PropTypes from \"prop-types\";\nimport {Box, Grid, Pagination} from \"@mui/material\";\nimport React from \"react\";\nimport LeagueCard from \"../ui/LeagueCard/LeagueCard\";\nimport Search from \"../ui/Search/Search\";\n\nconst LeaguesList = ({\n  currentLeagues = [],\n  searchedLeagues = [],\n  leaguesPerPage = 12,\n  searchValue = \"\",\n  currentPage = 1,\n  error,\n  isFetching,\n  onPageChanged,\n  onSearchChanged,\n}) => {\n  const pageCount = Math.ceil(searchedLeagues.length / leaguesPerPage);\n\n  // Creating skeletons\n  const skeletons = [];\n  for (let index = 0; index < leaguesPerPage; index++) {\n    skeletons.push(\n      <Grid item xs={12} sm={6} md={4} key={index}>\n        <LeagueCard isFetching />\n      </Grid>\n    );\n  }\n\n  return (\n    <>\n      <Box sx={{mb: \"30px\"}}>\n        <Search placeholder=\"Поиск…\" value={searchValue} onChange={onSearchChanged} />\n      </Box>\n\n      <Grid container spacing={2} sx={{mb: \"30px\"}}>\n        {error ? (\n          <Grid item>Ошибка при получении данных</Grid>\n        ) : isFetching ? (\n          skeletons\n        ) : searchValue && !searchedLeagues.length ? (\n          <Grid item>Ничего не найдено</Grid>\n        ) : (\n          currentLeagues.map(({id, name, area}) => (\n            <Grid item xs={12} sm={6} md={4} key={id}>\n              <LeagueCard\n                name={name}\n                areaName={area.name}\n                href={`/leagues/${id}/league-calendar`}\n              />\n            </Grid>\n          ))\n        )}\n      </Grid>\n      {searchedLeagues.length > 12 && !error && !isFetching ? (\n        <Pagination\n          onChange={onPageChanged}\n          page={currentPage}\n          count={pageCount}\n          color=\"primary\"\n          sx={{display: \"flex\", justifyContent: \"center\"}}\n        />\n      ) : null}\n    </>\n  );\n};\n\nLeaguesList.propTypes = {\n  currentLeagues: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      area: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      }),\n    })\n  ),\n  searchedLeagues: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      area: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      }),\n    })\n  ),\n  leaguesPerPage: PropTypes.number,\n  searchValue: PropTypes.string,\n  currentPage: PropTypes.number,\n  error: PropTypes.any,\n  isFetching: PropTypes.bool,\n  onPageChanged: PropTypes.func,\n  onSearchChanged: PropTypes.func,\n};\n\nexport default LeaguesList;\n","import PropTypes from \"prop-types\";\nimport React, {useState} from \"react\";\nimport {useGetLeaguesQuery} from \"../../api/leaguesApi\";\nimport {getPaginatedArray} from \"../../utils/pagination\";\nimport LeaguesList from \"../components/LeaguesList\";\n\nconst LeaguesListContainer = ({leaguesPerPage, ...rest}) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const {data = {}, error, isFetching} = useGetLeaguesQuery();\n  const {competitions} = data;\n  const searchedLeagues = competitions?.filter(\n    (l) =>\n      l.name.toLowerCase().indexOf(searchValue.toLowerCase()) >= 0 ||\n      l.area.name.toLowerCase().indexOf(searchValue.toLowerCase()) >= 0\n  );\n  const currentLeagues = getPaginatedArray(searchedLeagues, leaguesPerPage, currentPage);\n\n  const onPageChanged = (e, page) => setCurrentPage(page);\n\n  const onSearchChanged = (e) => {\n    setSearchValue(e.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <LeaguesList\n      isFetching={isFetching}\n      error={error?.error}\n      searchedLeagues={searchedLeagues}\n      currentLeagues={currentLeagues}\n      leaguesPerPage={leaguesPerPage}\n      searchValue={searchValue}\n      currentPage={currentPage}\n      onPageChanged={onPageChanged}\n      onSearchChanged={onSearchChanged}\n      {...rest}\n    />\n  );\n};\n\nLeaguesListContainer.propTypes = {\n  leaguesPerPage: PropTypes.number,\n};\n\nexport default LeaguesListContainer;\n","import {Container} from \"@mui/material\";\nimport LeaguesListContainer from \"../../common/containers/LeaguesListContainer\";\n\nconst Home = () => {\n  return (\n    <Container maxWidth=\"lg\">\n      <LeaguesListContainer leaguesPerPage={9} />\n    </Container>\n  );\n};\n\nexport default Home;\n","export const getPaginatedArray = (arr = [], itemsPerPage = 10, currentPage = 1) => {\n  const offset = (currentPage - 1) * itemsPerPage;\n  const paginatedItems = arr.slice(offset, offset + itemsPerPage);\n\n  return paginatedItems;\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\n\nexports.default = _default;"],"names":["StyledSearch","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","primary","main","width","breakpoints","up","StyledInputBase","InputBase","color","padding","spacing","paddingLeft","transition","transitions","create","SearchIconWrapper","height","pointerEvents","display","alignItems","justifyContent","props","inputProps","LeagueCardStyled","Paper","flexDirection","textDecoration","name","areaName","href","isFetching","elevation","component","Link","to","Skeleton","Typography","variant","gutterBottom","sx","currentLeagues","searchedLeagues","leaguesPerPage","searchValue","currentPage","error","onPageChanged","onSearchChanged","pageCount","Math","ceil","length","skeletons","index","push","Grid","item","xs","sm","md","Box","mb","Search","placeholder","value","onChange","container","map","id","area","Pagination","page","count","rest","useState","setCurrentPage","setSearchValue","useGetLeaguesQuery","data","competitions","filter","l","toLowerCase","indexOf","getPaginatedArray","e","target","Container","maxWidth","arr","itemsPerPage","offset","paginatedItems","slice","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}