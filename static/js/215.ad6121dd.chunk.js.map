{"version":3,"file":"static/js/215.ad6121dd.chunk.js","mappings":"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","sources":["common/ui/Search/Search.jsx","common/ui/LeagueCard/LeagueCard.jsx","common/components/LeaguesList.jsx","common/containers/LeaguesListContainer.jsx","pages/Leagues/Leagues.jsx","utils/pagination.js","../node_modules/@mui/icons-material/Search.js"],"sourcesContent":["import { InputBase, styled, alpha } from \"@mui/material\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n\r\nconst StyledSearch = styled(\"div\")(({ theme }) => ({\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.primary.main, 0.15),\r\n    \"&:hover\": {\r\n        backgroundColor: alpha(theme.palette.primary.main, 0.25),\r\n    },\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n        width: \"300px\",\r\n    },\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n    \"& .MuiInputBase-input\": {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n        transition: theme.transitions.create(\"width\"),\r\n    },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    color: theme.palette.primary.main,\r\n}));\r\n\r\nconst Search = (props) => (\r\n    <StyledSearch>\r\n        <SearchIconWrapper>\r\n            <SearchIcon />\r\n        </SearchIconWrapper>\r\n        <StyledInputBase {...props} inputProps={{ \"aria-label\": \"search\" }} />\r\n    </StyledSearch>\r\n);\r\n\r\nexport default Search;\r\n","import PropTypes from \"prop-types\";\r\nimport { Paper, Skeleton, styled, Typography } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LeagueCardStyled = styled(Paper)(() => ({\r\n    height: \"150px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: \"20px\",\r\n    textDecoration: \"none\",\r\n}));\r\n\r\nconst LeagueCard = ({\r\n    name = \"\",\r\n    areaName = \"\",\r\n    href = \"\",\r\n    isFetching = false,\r\n}) => {\r\n    return (\r\n        <LeagueCardStyled elevation={3} component={Link} to={href}>\r\n            {isFetching ? (\r\n                <Skeleton width=\"80%\">\r\n                    <Typography variant=\"h5\" component=\"div\" gutterBottom>\r\n                        .\r\n                    </Typography>\r\n                </Skeleton>\r\n            ) : (\r\n                <Typography variant=\"h5\" component=\"div\" gutterBottom>\r\n                    {name}\r\n                </Typography>\r\n            )}\r\n            {isFetching ? (\r\n                <Skeleton width=\"60%\">\r\n                    <Typography\r\n                        variant=\"subtitle\"\r\n                        component=\"div\"\r\n                        sx={{ color: \"#adabab\" }}\r\n                    >\r\n                        .\r\n                    </Typography>\r\n                </Skeleton>\r\n            ) : (\r\n                <Typography\r\n                    variant=\"subtitle\"\r\n                    component=\"div\"\r\n                    sx={{ color: \"#adabab\" }}\r\n                >\r\n                    {areaName}\r\n                </Typography>\r\n            )}\r\n        </LeagueCardStyled>\r\n    );\r\n};\r\n\r\nLeagueCard.propTypes = {\r\n    name: PropTypes.string,\r\n    areaName: PropTypes.string,\r\n    href: PropTypes.string,\r\n    isFetching: PropTypes.bool,\r\n};\r\n\r\nexport default LeagueCard;\r\n","import PropTypes from \"prop-types\";\r\nimport { Box, Grid, Pagination } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport LeagueCard from \"../ui/LeagueCard/LeagueCard\";\r\nimport Search from \"../ui/Search/Search\";\r\n\r\nconst LeaguesList = ({\r\n    currentLeagues = [],\r\n    searchedLeagues = [],\r\n    leaguesPerPage = 12,\r\n    searchValue = \"\",\r\n    currentPage = 1,\r\n    error,\r\n    isFetching,\r\n    onPageChanged,\r\n    onSearchChanged,\r\n}) => {\r\n    const pageCount = Math.ceil(searchedLeagues.length / leaguesPerPage);\r\n\r\n    // Creating skeletons\r\n    const skeletons = [];\r\n    for (let index = 0; index < leaguesPerPage; index++) {\r\n        skeletons.push(\r\n            <Grid item xs={12} sm={6} md={4} key={index}>\r\n                <LeagueCard isFetching />\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{ mb: \"30px\" }}>\r\n                <Search\r\n                    placeholder=\"Поиск…\"\r\n                    value={searchValue}\r\n                    onChange={onSearchChanged}\r\n                />\r\n            </Box>\r\n\r\n            <Grid container spacing={2} sx={{ mb: \"30px\" }}>\r\n                {error ? (\r\n                    <Grid item>Ошибка при получении данных</Grid>\r\n                ) : isFetching ? (\r\n                    skeletons\r\n                ) : searchValue && !searchedLeagues.length ? (\r\n                    <Grid item>Ничего не найдено</Grid>\r\n                ) : (\r\n                    currentLeagues.map(({ id, name, area }) => (\r\n                        <Grid item xs={12} sm={6} md={4} key={id}>\r\n                            <LeagueCard\r\n                                name={name}\r\n                                areaName={area.name}\r\n                                href={`/leagues/${id}/league-calendar`}\r\n                            />\r\n                        </Grid>\r\n                    ))\r\n                )}\r\n            </Grid>\r\n            {searchedLeagues.length > 12 && !error && !isFetching ? (\r\n                <Pagination\r\n                    onChange={onPageChanged}\r\n                    page={currentPage}\r\n                    count={pageCount}\r\n                    color=\"primary\"\r\n                    sx={{ display: \"flex\", justifyContent: \"center\" }}\r\n                />\r\n            ) : null}\r\n        </>\r\n    );\r\n};\r\n\r\nLeaguesList.propTypes = {\r\n    currentLeagues: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            area: PropTypes.shape({\r\n                name: PropTypes.string.isRequired,\r\n            }),\r\n        })\r\n    ),\r\n    searchedLeagues: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            area: PropTypes.shape({\r\n                name: PropTypes.string.isRequired,\r\n            }),\r\n        })\r\n    ),\r\n    leaguesPerPage: PropTypes.number,\r\n    searchValue: PropTypes.string,\r\n    currentPage: PropTypes.number,\r\n    error: PropTypes.any,\r\n    isFetching: PropTypes.bool,\r\n    onPageChanged: PropTypes.func,\r\n    onSearchChanged: PropTypes.func,\r\n};\r\n\r\nexport default LeaguesList;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { useState } from \"react\";\r\nimport { useGetLeaguesQuery } from \"../../api/leaguesApi\";\r\nimport { getPaginatedArray } from \"../../utils/pagination\";\r\nimport LeaguesList from \"../components/LeaguesList\";\r\n\r\nconst LeaguesListContainer = ({ leaguesPerPage, ...rest }) => {\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const { data = {}, error, isFetching } = useGetLeaguesQuery();\r\n    const { competitions } = data;\r\n    const searchedLeagues = competitions?.filter(\r\n        (l) =>\r\n            l.name.toLowerCase().indexOf(searchValue.toLowerCase()) >= 0 ||\r\n            l.area.name.toLowerCase().indexOf(searchValue.toLowerCase()) >= 0\r\n    );\r\n    const currentLeagues = getPaginatedArray(\r\n        searchedLeagues,\r\n        leaguesPerPage,\r\n        currentPage\r\n    );\r\n\r\n    const onPageChanged = (e, page) => setCurrentPage(page);\r\n\r\n    const onSearchChanged = (e) => {\r\n        setSearchValue(e.target.value);\r\n        setCurrentPage(1);\r\n    };\r\n\r\n    return (\r\n        <LeaguesList\r\n            isFetching={isFetching}\r\n            error={error?.error}\r\n            searchedLeagues={searchedLeagues}\r\n            currentLeagues={currentLeagues}\r\n            leaguesPerPage={leaguesPerPage}\r\n            searchValue={searchValue}\r\n            currentPage={currentPage}\r\n            onPageChanged={onPageChanged}\r\n            onSearchChanged={onSearchChanged}\r\n            {...rest}\r\n        />\r\n    );\r\n};\r\n\r\nLeaguesListContainer.propTypes = {\r\n    leaguesPerPage: PropTypes.number,\r\n};\r\n\r\nexport default LeaguesListContainer;\r\n","import { Container } from \"@mui/material\";\r\nimport LeaguesListContainer from \"../../common/containers/LeaguesListContainer\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <Container maxWidth=\"lg\">\r\n            <LeaguesListContainer leaguesPerPage={9} />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","export const getPaginatedArray = (arr = [], itemsPerPage = 10, currentPage = 1) => {\r\n    const offset = (currentPage - 1) * itemsPerPage;\r\n    const paginatedItems = arr.slice(offset, offset + itemsPerPage);\r\n\r\n    return paginatedItems;\r\n};\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\n\nexports.default = _default;"],"names":["StyledSearch","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","primary","main","width","breakpoints","up","StyledInputBase","InputBase","color","padding","spacing","paddingLeft","transition","transitions","create","SearchIconWrapper","height","pointerEvents","display","alignItems","justifyContent","props","inputProps","LeagueCardStyled","Paper","flexDirection","textDecoration","name","areaName","href","isFetching","elevation","component","Link","to","Skeleton","Typography","variant","gutterBottom","sx","currentLeagues","searchedLeagues","leaguesPerPage","searchValue","currentPage","error","onPageChanged","onSearchChanged","pageCount","Math","ceil","length","skeletons","index","push","Grid","item","xs","sm","md","Box","mb","Search","placeholder","value","onChange","container","map","id","area","Pagination","page","count","rest","useState","setCurrentPage","setSearchValue","useGetLeaguesQuery","data","competitions","filter","l","toLowerCase","indexOf","getPaginatedArray","e","target","Container","maxWidth","arr","itemsPerPage","offset","paginatedItems","slice","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}